-- Create the Books table
CREATE TABLE Books (
    BookID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Author VARCHAR(255) NOT NULL,
    Genre VARCHAR(100),
    PublishedYear INT,
    CopiesAvailable INT DEFAULT 0
);

-- Create the Members table
CREATE TABLE Members (
    MemberID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE,
    JoinDate DATE DEFAULT CURRENT_DATE
);

-- Create the BorrowRecords table
CREATE TABLE BorrowRecords (
    RecordID INT PRIMARY KEY AUTO_INCREMENT,
    BookID INT,
    MemberID INT,
    BorrowDate DATE DEFAULT CURRENT_DATE,
    ReturnDate DATE,
    Status VARCHAR(50) DEFAULT 'Borrowed',
    FOREIGN KEY (BookID) REFERENCES Books(BookID),
    FOREIGN KEY (MemberID) REFERENCES Members(MemberID)
);
-- Insert sample books
INSERT INTO Books (Title, Author, Genre, PublishedYear, CopiesAvailable)
VALUES 
('The Great Gatsby', 'F. Scott Fitzgerald', 'Fiction', 1925, 3),
('1984', 'George Orwell', 'Dystopian', 1949, 5),
('To Kill a Mockingbird', 'Harper Lee', 'Fiction', 1960, 2);

-- Insert sample members
INSERT INTO Members (Name, Email)
VALUES 
('Alice Johnson', 'alice@example.com'),
('Bob Smith', 'bob@example.com'),
('Charlie Brown', 'charlie@example.com');

-- Insert sample borrow records
INSERT INTO BorrowRecords (BookID, MemberID, BorrowDate)
VALUES 
(1, 1, '2025-04-01'),
(2, 2, '2025-04-03');
SELECT * FROM Books WHERE CopiesAvailable > 0;
SELECT Members.Name, Books.Title, BorrowRecords.BorrowDate, BorrowRecords.ReturnDate
FROM BorrowRecords
JOIN Members ON BorrowRecords.MemberID = Members.MemberID
JOIN Books ON BorrowRecords.BookID = Books.BookID
WHERE Members.MemberID = 1;
UPDATE BorrowRecords
SET ReturnDate = CURRENT_DATE, Status = 'Returned'
WHERE RecordID = 1;

-- Increment the CopiesAvailable count in Books table
UPDATE Books
SET CopiesAvailable = CopiesAvailable + 1
WHERE BookID = 1;
SELECT Books.Title, COUNT(BorrowRecords.RecordID) AS BorrowCount
FROM BorrowRecords
JOIN Books ON BorrowRecords.BookID = Books.BookID
GROUP BY Books.Title
ORDER BY BorrowCount DESC;
SELECT Members.Name, Books.Title, BorrowRecords.BorrowDate
FROM BorrowRecords
JOIN Members ON BorrowRecords.MemberID = Members.MemberID
JOIN Books ON BorrowRecords.BookID = Books.BookID
WHERE BorrowRecords.Status = 'Borrowed' AND BorrowRecords.BorrowDate < DATE_SUB(CURRENT_DATE, INTERVAL 14 DAY);
